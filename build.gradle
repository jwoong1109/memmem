plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.9'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) 
	}
}
jar{
	enabled=false
}

bootJar{
	archiveFileName= "memmem.jar" 
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.security:spring-security-oauth2-client:6.3.3'
	implementation 'com.github.shin285:KOMORAN:3.3.9'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	 
	//웹크롤링
    implementation 'org.jsoup:jsoup:1.18.1'
	  	
	//hidden
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient 사용 시
	
	//recaptcha 보안 이용
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    	
	implementation 'com.github.mwiede:jsch:0.2.18'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	testImplementation 'org.springframework.security:spring-security-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaExec) {
    systemProperty 'user.dir', project.rootDir.absolutePath
}
